---
import { render } from 'astro:content'
import type { GetStaticPaths } from 'astro'
import Layout from '~/layouts/Layout.astro'
import ThoughtsLayout from '~/layouts/ThoughtsLayout.astro'
import { formatDate } from '~/lib/date'
import { getAllThoughts, type ThoughtPost } from '~/lib/thoughts'

interface Props {
	thought: ThoughtPost
}

export const getStaticPaths: GetStaticPaths = async () => {
	const thoughts = await getAllThoughts()

	return thoughts.map((thought) => {
		// Extract metadata for the path
		const dateCreated = thought.data.date || new Date('2025-01-01')
		const year = dateCreated.getFullYear().toString()

		// Handle nested slugs (e.g., "markdown/frontmatter-basics" -> "frontmatter-basics")
		const slug = thought.id.includes('/')
			? (thought.id.split('/').pop() ?? thought.id)
			: thought.id

		return {
			params: { year, slug },
			props: { thought },
		}
	})
}

const { thought } = Astro.props

if (!thought) {
	return new Response(null, {
		status: 404,
		statusText: 'Not found',
	})
}

const { Content } = await render(thought)

// Extract metadata
const dateCreated = thought.data.date || new Date()
const title = thought.data.title || thought.id.replace(/-/g, ' ')

// Generate slug for view transitions (consistent with ThoughtListItem)
const slug = thought.id.includes('/')
	? (thought.id.split('/').pop() ?? thought.id)
	: thought.id
---

<Layout>
	<ThoughtsLayout>
		<article class="mx-auto py-6">
			<header class="mb-8">
				<h1 
					class="text-3xl font-bold text-neutral-900 dark:text-neutral-200 mb-2"
					style={{viewTransitionName: `thought-title-${slug}`}}
				>
					{title}
				</h1>
				<time 
					datetime={dateCreated.toISOString()}
					class="text-sm text-neutral-500 dark:text-neutral-400"
					style={{viewTransitionName: `thought-date-${slug}`}}
				>
					{formatDate(dateCreated)}
				</time>
				{thought.data.tags && thought.data.tags.length > 0 && (
					<div 
						class="flex flex-wrap gap-2 mt-4"
						style={{viewTransitionName: `thought-tags-${slug}`}}
					>
						{thought.data.tags.map((tag) => (
							<a 
								href={`/thoughts/tags/${tag.toLowerCase()}`}
								class="inline-block px-2 py-1 rounded text-sm font-medium transition-colors bg-emerald-100 dark:bg-emerald-900/30 text-emerald-800 dark:text-emerald-300 hover:bg-emerald-200 dark:hover:bg-emerald-900/50"
							>
								{tag}
							</a>
						))}
					</div>
				)}
			</header>

			<div class="max-w-none dark:text-neutral-300">
				<Content />
			</div>
		</article>
		
		<nav class="mt-12 pt-8 border-t border-neutral-200 dark:border-neutral-700">
			<a 
				href="/thoughts/" 
				class="text-emerald-600 dark:text-emerald-400 hover:text-emerald-800 dark:hover:text-emerald-300 transition-colors"
			>
				‚Üê Back to all thoughts
			</a>
		</nav>
	</ThoughtsLayout>
</Layout>